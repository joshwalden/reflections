What happens when you initialize a repository? Why do you need to do it?

	When you initialize a repository, you establish a new repository and are ready to start using it to log commits. You have to do it because folders don’t initially come with a .git file, which has to be created.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	The staging area is a midway point between the working directory and the repository. You create edits on documents in a working directory, add them to the staging area to prepare a commit, and the commit them to the repository, which you can then log. This allows greater freedom to the user, who can decide which files are ready for a commit at which time, and prepare them in the staging area for a more meaningful entry in the repository. 

How can you use the staging area to make sure you have one commit per logical
change?

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git’s automatic merging vs. always doing merges
manually?
